/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "AppDelegate.h"
#import "BonjourBrowser.h"

#import "RCTRootView.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
//  //测试  browser
//  retestBro  = [[BonjourBrowser alloc]init];
//  [retestBro start];
//  //测试  pubilsh
//  self.testPub =  [[BonjourPublish alloc]init];
//  [self.testPub bonjourPublish];
  
  [self connection];
  NSURL *jsCodeLocation;

  /**
   * Loading JavaScript code - uncomment the one you want.
   *
   * OPTION 1
   * Load from development server. Start the server from the repository root:
   *
   * $ npm start
   *
   * To run on device, change `localhost` to the IP address of your computer
   * (you can get this by typing `ifconfig` into the terminal and selecting the
   * `inet` value under `en0:`) and make sure your computer and iOS device are
   * on the same Wi-Fi network.
   */

  jsCodeLocation = [NSURL URLWithString:@"http://192.168.31.221:8081/index.ios.bundle?platform=ios&dev=true"];

  /**
   * OPTION 2
   * Load from pre-bundled file on disk. The static bundle is automatically
   * generated by the "Bundle React Native code and images" build step when
   * running the project on an actual device or running the project on the
   * simulator in the "Release" build configuration.
   */

//   jsCodeLocation = [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
  NSArray *userNameList = @[@"row one",
                            @"row two",
                            @"row three",
                            @"row four",
                            @"row five"];
  

  NSDictionary *props = @{@"userNameList" : userNameList};
  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
                                                      moduleName:@"ReactNativeGlood"
                                               initialProperties:props
                                                   launchOptions:launchOptions];

  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];
  return YES;
}

#define HOST @"192.168.31.221"
#define PORT 8081

- (void)connection
{
  socket = [[GCDAsyncSocket alloc]initWithDelegate:self delegateQueue:dispatch_get_main_queue()];
  socket.delegate = self;
  NSError *err = nil;
  BOOL connState=[socket connectToHost:HOST onPort:PORT error:&err];
  if(!connState)
  {
    NSLog(@"%@",err.description);
  }else
  {
    NSLog(@"连接服务器：%@ 成功",HOST);
    NSLog(@"打开端口");
  }
}

- (void)socketDidDisconnect:(GCDAsyncSocket *)sock withError:(NSError *)err
{
  NSLog(@"socket did is connect:%@",err);
}

-(void)socket:(GCDAsyncSocket *)sock didReadData:(NSData *)data withTag:(long)tag
{
  NSString *newMessage = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
  NSLog(@"%@",[NSString stringWithFormat:@"服务器：%@:%@",sock.connectedHost,newMessage]);
  [socket readDataWithTimeout:-1 tag:0];
}

@end
